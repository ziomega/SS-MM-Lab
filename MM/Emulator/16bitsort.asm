ASSUME DS:DATA, CS:CODE

DATA SEGMENT
    ARR     DW 10 DUP(?)
    COUNT   DW ?
    MSG1    DB 0AH,0DH,"ENTER NUMBER OF ELEMENTS (1-9): $"
    MSG2    DB 0AH,0DH,"ENTER HEXADECIMAL NUMBER (4 DIGITS): $"
    MSG3    DB 0AH,0DH,"UNSORTED ARRAY: $"
    MSG4    DB 0AH,0DH,"SORTED ARRAY: $"
    SPACE   DB " $"
    NEWLINE DB 0AH,0DH,"$"
DATA ENDS

CODE SEGMENT
START:
    MOV AX, DATA
    MOV DS, AX
    
    LEA DX, MSG1
    MOV AH, 09H
    INT 21H
    
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, AL
    XOR BH, BH
    MOV COUNT, BX
    
    MOV CX, COUNT
    LEA SI, ARR
    
INPUT_LOOP:
    PUSH CX
    LEA DX, MSG2
    MOV AH, 09H
    INT 21H
    CALL READ_HEX
    MOV [SI], BX
    ADD SI, 2
    POP CX
    LOOP INPUT_LOOP
    
    LEA DX, MSG3
    MOV AH, 09H
    INT 21H
    CALL DISPLAY_ARRAY
    
    MOV CX, COUNT
    DEC CX
    
OUTER_LOOP:
    MOV BX, CX
    MOV CX, COUNT
    DEC CX
    LEA SI, ARR
    
INNER_LOOP:
    MOV AX, [SI]
    MOV DX, [SI+2]
    CMP AX, DX
    JBE NO_SWAP
    MOV [SI], DX
    MOV [SI+2], AX
NO_SWAP:
    ADD SI, 2
    LOOP INNER_LOOP
    MOV CX, BX
    LOOP OUTER_LOOP
    
    LEA DX, MSG4
    MOV AH, 09H
    INT 21H
    CALL DISPLAY_ARRAY
    
    MOV AH, 4CH
    INT 21H

READ_HEX PROC
    PUSH CX
    MOV BX, 0
    MOV CX, 4
READ_DIGIT:
    MOV AH, 01H
    INT 21H
    CMP AL, '9'
    JBE NUMERIC
    SUB AL, 37H
    JMP SHIFT_IN
NUMERIC:
    SUB AL, 30H
SHIFT_IN:
    SHL BX, 4
    OR BL, AL
    LOOP READ_DIGIT
    POP CX
    RET
READ_HEX ENDP

DISPLAY_ARRAY PROC
    PUSH CX
    PUSH SI
    MOV CX, COUNT
    LEA SI, ARR
PRINT_LOOP:
    PUSH CX
    MOV BX, [SI]
    CALL PRINT_HEX
    LEA DX, SPACE
    MOV AH, 09H
    INT 21H
    ADD SI, 2
    POP CX
    LOOP PRINT_LOOP
    LEA DX, NEWLINE
    MOV AH, 09H
    INT 21H
    POP SI
    POP CX
    RET
DISPLAY_ARRAY ENDP

PRINT_HEX PROC
    PUSH CX
    PUSH BX
    MOV CX, 4
NEXT_DIGIT:
    ROL BX, 4
    MOV AL, BL
    AND AL, 0FH
    CMP AL, 09H
    JBE ADD_ZERO
    ADD AL, 37H
    JMP PRINT_IT
ADD_ZERO:
    ADD AL, 30H
PRINT_IT:
    MOV DL, AL
    MOV AH, 02H
    INT 21H
    LOOP NEXT_DIGIT
    POP BX
    POP CX
    RET
PRINT_HEX ENDP

CODE ENDS
END START

